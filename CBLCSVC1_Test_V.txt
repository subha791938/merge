       IDENTIFICATION DIVISION.
       PROGRAM-ID.    CBLCSVC1.
       AUTHOR.        SIMOTIME TECHNOLOGIES.
      *****************************************************************
      *           This program was generated by SimoZAPS              *
      *             A product of SimoTime Technologies                *
      *        Our e-mail address is: helpdesk@simotime.com           *
      *     Also, visit our Web Site at http://www.simotime.com       *
      *                                                               *
      *  Generation Date: 2012-01-16  Generation Time: 13:01:02:16    *
      *---------------------------------------------------------------*
      *  XXXX     99-99-9999              Prod version                *
      *  ABCD     11-10-2019              R61 AIRP Change             *
      *  EFGH     11-01-2019              R61 NGVAM Change            * 
      *---------------------------------------------------------------*
      *                                   Record    Record     Key    *
      *  Function  Name     Organization  Format    Max-Min  Pos-Len  *
      *  INPUT     CUSTLFFL ASCII/CRLF    FIXED      00512            *
      *                                                               *
      *  OUTPUT    CUSTLCSV ASCII/CRLF    VARIABLE   00512            *
      *                                                               *
      *                                                               *
      *****************************************************************
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT CUSTLFFL-FILE  ASSIGN TO       CUSTLFFL
                  ORGANIZATION  IS LINE SEQUENTIAL
                  ACCESS MODE   IS SEQUENTIAL
                  FILE STATUS   IS CUSTLFFL-STATUS.
           SELECT CUSTLCSV-FILE  ASSIGN TO       CUSTLCSV
                  ORGANIZATION  IS LINE SEQUENTIAL
                  ACCESS MODE   IS SEQUENTIAL
                  FILE STATUS   IS CUSTLCSV-STATUS.

      *****************************************************************
       DATA DIVISION.
       FILE SECTION.
       FD  CUSTLFFL-FILE
           DATA RECORD    IS CUSTLFFL-REC
           .
       01  CUSTLFFL-REC.
           05  CUSTLFFL-DATA-01 PIC X(00512).

       FD  CUSTLCSV-FILE
           DATA RECORD    IS CUSTLCSV-REC
           .
       01  CUSTLCSV-REC.
           05  CUSTLCSV-DATA-01 PIC X(00512).

      *****************************************************************
      * This program was created with the SYSMASK3.TXT file as the    *
      * template for the File I/O. It is intended for use with the    *
      * TransCALL facility that makes a call to a routine that does   *
      * the actual conversion between EBCDIC and ASCII. For more      *
      * information or questions contact SimoTime Technologies.       *
      *                                                               *
      *        Our e-mail address is: helpdesk@simotime.com           *
      *     Also, visit our Web Site at http://www.simotime.com       *
      *                                                               *
      * The SYSMASK3 provides for the sequential reading of the input *
      * file and the sequential writing of the output file.           *
      *                                                               *
      * This program mask is used with a callable subroutine that     *
      * will do ASCII/EBCDIC Conversion based on a COBOL Copy File.   *
      *                                                               *
      * If the output file is indexed then the input file must be in  *
      * sequence by the field that will be used to provide the key    *
      * for the output file.                                          *
      *                                                               *
      * If the key field is not in sequence then refer to SYSMASK4    *
      * to provide for a random add or update of the indexed file.    *
      *****************************************************************
       WORKING-STORAGE SECTION.
       01  SIM-TITLE.
           05  T1 pic X(11) value '* CBLCSVC1 '.
           05  T2 pic X(34) value 'Convert a CUSTLFFL to a CUSTLCSV  '.
           05  T3 pic X(10) value ' v10.07.06'.
           05  T4 pic X(24) value '   helpdesk@simotime.com'.
       01  SIM-COPYRIGHT.
           05  C1 pic X(11) value '* CBLCSVC1 '.
           05  C2 pic X(32) value 'This Data File Convert Member wa'.
           05  C3 pic X(32) value 's generated by SimoTime Technolo'.
           05  C4 pic X(04) value 'gies'.

       01  CUSTLFFL-STATUS.
           05  CUSTLFFL-STATUS-L     pic X.
           05  CUSTLFFL-STATUS-R     pic X.
       01  CUSTLFFL-EOF              pic X       value 'N'.
       01  CUSTLFFL-OPEN-FLAG        pic X       value 'C'.

       01  CUSTLCSV-STATUS.
           05  CUSTLCSV-STATUS-L     pic X.
           05  CUSTLCSV-STATUS-R     pic X.
       01  CUSTLCSV-EOF              pic X       value 'N'.
       01  CUSTLCSV-OPEN-FLAG        pic X       value 'C'.

       01  CUSTLFFL-LRECL            pic 9(5)    value 00512.
       01  CUSTLCSV-LRECL            pic 9(5)    value 00512.

      *****************************************************************
      * The following buffers are used to create a four-byte status   *
      * code that may be displayed.                                   *
      *****************************************************************
       01  IO-STATUS.
           05  IO-STAT1            pic X.
           05  IO-STAT2            pic X.
       01  IO-STATUS-04.
           05  IO-STATUS-0401      pic 9     value 0.
           05  IO-STATUS-0403      pic 999   value 0.
       01  TWO-BYTES-BINARY        pic 9(4)  BINARY.
       01  TWO-BYTES-ALPHA         redefines TWO-BYTES-BINARY.
           05  TWO-BYTES-LEFT      pic X.
           05  TWO-BYTES-RIGHT     pic X.

      *****************************************************************
      * Message Buffer used by the Z-DISPLAY-MESSAGE-TEXT routine.    *
      *****************************************************************
       01  MESSAGE-BUFFER.
           05  MESSAGE-HEADER      pic X(11)   value '* CBLCSVC1 '.
           05  MESSAGE-TEXT.
               10  MESSAGE-TEXT-1  pic X(68)   value SPACES.
               10  MESSAGE-TEXT-2  pic X(188)  value SPACES.

      *****************************************************************
       01  PROGRAM-NAME            pic X(8)     value 'CBLCSVC1'.

       01  INFO-STATEMENT.
           05  INFO-SHORT.
               10  INFO-ID pic X(8)    value 'Starting'.
               10  filler  pic X(2)    value ', '.
               10  filler  pic X(34)
                   value   'Convert a CUSTLFFL to a CUSTLCSV  '.
           05  filler      pic X(24)
               value ' http://www.SimoTime.com'.

       01  APPL-RESULT             pic S9(9)    comp.
           88  APPL-AOK            value 0.
           88  APPL-EOF            value 16.

       01  CUSTLFFL-TOTAL.
           05  CUSTLFFL-RDR  pic 9(9)    value 0.
           05  filler      pic X(3)    value ' - '.
           05  filler      pic X(23)   value 'Line count for CUSTLFFL'.
       01  CUSTLCSV-TOTAL.
           05  CUSTLCSV-ADD  pic 9(9)    value 0.
           05  filler      pic X(3)    value ' - '.
           05  filler      pic X(23)   value 'Line count for CUSTLCSV'.

      *****************************************************************
       PROCEDURE DIVISION.
           move all '*' to MESSAGE-TEXT-1
           perform Z-DISPLAY-MESSAGE-TEXT
           move INFO-STATEMENT to MESSAGE-TEXT-1
           perform Z-DISPLAY-MESSAGE-TEXT
           move all '*' to MESSAGE-TEXT-1
           perform Z-DISPLAY-MESSAGE-TEXT
           perform Z-POST-COPYRIGHT
           perform CUSTLFFL-OPEN
           perform CUSTLCSV-OPEN
           #Insert Line1 for AIRP
           #Insert Line2 for AIRP
           perform until CUSTLFFL-STATUS not = '00'
               perform CUSTLFFL-READ
               if  CUSTLFFL-STATUS = '00'
                   add 1 to CUSTLFFL-RDR
                   perform BUILD-OUTPUT-RECORD
                   perform CUSTLCSV-WRITE
                   if  CUSTLCSV-STATUS = '00'
                       add 1 to CUSTLCSV-ADD
                   end-if
               end-if
           end-perform
           #Insert Line1 for NGVAM
           #Insert Line2 for NGVAM
           move CUSTLFFL-TOTAL to MESSAGE-TEXT
           perform Z-DISPLAY-MESSAGE-TEXT

           move CUSTLCSV-TOTAL to MESSAGE-TEXT
           perform Z-DISPLAY-MESSAGE-TEXT

           if  APPL-EOF
               move 'Complete' to INFO-ID
           else
               move 'ABENDING' to INFO-ID
           end-if
           move INFO-STATEMENT to MESSAGE-TEXT(1:77)    ---- NgVAM
           perform Z-DISPLAY-MESSAGE-TEXT

           perform CUSTLCSV-CLOSE
           perform CUSTLFFL-CLOSE
           GOBACK.

      *****************************************************************
       BUILD-OUTPUT-RECORD.
      *    Extract CALL process...
           call 'CBLCSVR1'                        using CUSTLCSV-REC
                                                        CUSTLFFL-REC
           add 00512 to ZERO giving CUSTLCSV-LRECL
           exit.

      *****************************************************************
      * I/O Routines for the INPUT File...                            *
      *****************************************************************
       CUSTLFFL-CLOSE.
           add 10 to ZERO giving APPL-RESULT.
           close CUSTLFFL-FILE
           if  CUSTLFFL-STATUS = '00'
               subtract APPL-RESULT from APPL-RESULT
           else
               add 12 to ZERO giving APPL-RESULT
           end-if
           if  APPL-AOK
               CONTINUE
           else
               move 'CLOSE Failure with CUSTLFFL' to MESSAGE-TEXT
               perform Z-DISPLAY-MESSAGE-TEXT
               move CUSTLFFL-STATUS to IO-STATUS
               perform Z-DISPLAY-IO-STATUS
               perform Z-ABEND-PROGRAM
           end-if
           exit.
      *---------------------------------------------------------------*
       CUSTLFFL-READ.
           read CUSTLFFL-FILE
           if  CUSTLFFL-STATUS = '00'
               subtract APPL-RESULT from APPL-RESULT
           else
               if  CUSTLFFL-STATUS = '10'
                   add 16 to ZERO giving APPL-RESULT
               else
                   add 12 to ZERO giving APPL-RESULT
               end-if
           end-if
           if  APPL-AOK
               CONTINUE
           else
               if  APPL-EOF
                   move 'Y' to CUSTLFFL-EOF
               else
                   move 'READ Failure with CUSTLFFL' to MESSAGE-TEXT
                   perform Z-DISPLAY-MESSAGE-TEXT
                   move CUSTLFFL-STATUS to IO-STATUS
                   perform Z-DISPLAY-IO-STATUS
                   perform Z-ABEND-PROGRAM
               end-if
           end-if
           exit.
      *---------------------------------------------------------------*
       CUSTLFFL-OPEN.
           add 8 to ZERO giving APPL-RESULT.
           open input CUSTLFFL-FILE
           if  CUSTLFFL-STATUS = '00'
               subtract APPL-RESULT from APPL-RESULT
               move 'O' to CUSTLFFL-OPEN-FLAG
           else
               add 16 to ZERO giving APPL-RESULT            ----- AIRP
           end-if
           if  APPL-AOK
               CONTINUE
           else
               move 'OPEN Failure with CUSTLFFL' to MESSAGE-TEXT
               perform Z-DISPLAY-MESSAGE-TEXT
               move CUSTLFFL-STATUS to IO-STATUS
               perform Z-DISPLAY-IO-STATUS
               perform Z-ABEND-PROGRAM
           end-if
           exit.

      *****************************************************************
      * I/O Routines for the OUTPUT File...                           *
      *****************************************************************
       CUSTLCSV-WRITE.
           if  CUSTLCSV-OPEN-FLAG = 'C'
               perform CUSTLCSV-OPEN
           end-if
           write CUSTLCSV-REC
           if  CUSTLCSV-STATUS = '00'
               subtract APPL-RESULT from APPL-RESULT
           else
               if  CUSTLCSV-STATUS = '10'
                   add 16 to ZERO giving APPL-RESULT
               else
                   add 12 to ZERO giving APPL-RESULT
               end-if
           end-if.
           if  APPL-AOK
               CONTINUE
           else
               move 'WRITE Failure with CUSTLCSV' to MESSAGE-TEXT
               perform Z-DISPLAY-MESSAGE-TEXT
               move CUSTLCSV-STATUS to IO-STATUS
               perform Z-DISPLAY-IO-STATUS
               perform Z-ABEND-PROGRAM
           end-if
           exit.
      *---------------------------------------------------------------*
       CUSTLCSV-OPEN.
           add 8 to ZERO giving APPL-RESULT.
           open OUTPUT CUSTLCSV-FILE
           if  CUSTLCSV-STATUS = '00'
               subtract APPL-RESULT from APPL-RESULT
               move 'O' to CUSTLCSV-OPEN-FLAG
           else
               add 12 to ZERO giving APPL-RESULT
           end-if
           if  APPL-AOK
               CONTINUE
           else
               move 'OPEN Failure with CUSTLCSV' to MESSAGE-TEXT
               perform Z-DISPLAY-MESSAGE-TEXT
               move CUSTLCSV-STATUS to IO-STATUS
               perform Z-DISPLAY-IO-STATUS
               perform Z-ABEND-PROGRAM
           end-if
           exit.
      *---------------------------------------------------------------*
       CUSTLCSV-CLOSE.
           add 8 to ZERO giving APPL-RESULT.
           close CUSTLCSV-FILE
           if  CUSTLCSV-STATUS = '00'
               subtract APPL-RESULT from APPL-RESULT
               move 'C' to CUSTLCSV-OPEN-FLAG
           else
               add 12 to ZERO giving APPL-RESULT
           end-if
           if  APPL-AOK
               CONTINUE
           else
               move 'CLOSE Failure with CUSTLCSV' to MESSAGE-TEXT
               perform Z-DISPLAY-MESSAGE-TEXT
               move CUSTLCSV-STATUS to IO-STATUS
               perform Z-DISPLAY-IO-STATUS
               perform Z-ABEND-PROGRAM
           end-if
           exit.

      *****************************************************************
      * The following Z-ROUTINES provide administrative functions     *
      * for this program.                                             *
      *****************************************************************
      * ABEND the program, post a message to the console and issue    *
      * a STOP RUN.                                                   *
      *****************************************************************
       Z-ABEND-PROGRAM.
           if  MESSAGE-TEXT not = SPACES
               perform Z-DISPLAY-MESSAGE-TEXT
           end-if
           move 'PROGRAM-IS-ABENDING...'  to MESSAGE-TEXT
           perform Z-DISPLAY-MESSAGE-TEXT
           add 12 to ZERO giving RETURN-CODE
           STOP RUN.
      *    exit.

      *****************************************************************
      * Display CONSOLE messages...                                   *
      *****************************************************************
       Z-DISPLAY-MESSAGE-TEXT.
           if MESSAGE-TEXT-2 = SPACES
               display MESSAGE-BUFFER(1:79)
           else
               display MESSAGE-BUFFER
           end-if
           move all SPACES to MESSAGE-TEXT
           exit.

      *****************************************************************
      * Display the file status bytes. This routine will display as   *
      * four digits. If the full two byte file status is numeric it   *
      * will display as 00nn. If the 1st byte is a numeric nine (9)   *
      * the second byte will be treated as a binary number and will   *
      * display as 9nnn.                                              *
      *****************************************************************
       Z-DISPLAY-IO-STATUS.
           if  IO-STATUS not NUMERIC
           or  IO-STAT1 = '9'
               move IO-STAT1 to IO-STATUS-04(1:1)
               subtract TWO-BYTES-BINARY from TWO-BYTES-BINARY
               move IO-STAT2 to TWO-BYTES-RIGHT
               add TWO-BYTES-BINARY to ZERO giving IO-STATUS-0403
               move 'File Status is: nnnn' to MESSAGE-TEXT
               move IO-STATUS-04 to MESSAGE-TEXT(17:4)
               perform Z-DISPLAY-MESSAGE-TEXT
           else
               move '0000' to IO-STATUS-04
               move IO-STATUS to IO-STATUS-04(3:2)
               move 'File Status is: nnnn' to MESSAGE-TEXT
               move IO-STATUS-04 to MESSAGE-TEXT(17:4)
               perform Z-DISPLAY-MESSAGE-TEXT
           end-if
           exit.

      *****************************************************************
       Z-POST-COPYRIGHT.
           display SIM-TITLE
           display SIM-COPYRIGHT
           exit.
      *****************************************************************
      *           This program was generated by SimoZAPS              *
      *             A product of SimoTime Technologies                *
      *        Our e-mail address is: helpdesk@simotime.com           *
      *     Also, visit our Web Site at http://www.simotime.com       *
      *                                                               *
      *  Generation Date: 2012-01-16  Generation Time: 13:01:02:19    *
      *****************************************************************
